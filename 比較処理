function updateSheet() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheetA = ss.getSheetByName('Aシート(今月)');
  var sheetB = ss.getSheetByName('Bシート(先月)');

  var dataA = sheetA.getDataRange().getValues();
  var dataB = sheetB.getDataRange().getValues();

  var headerA = dataA[0];
  var idIndexA = headerA.indexOf('ID');
  var dateIndexA = headerA.indexOf('確認');

  var headerB = dataB[0];
  var idIndexB = headerB.indexOf('ID');
  var dateIndexB = headerB.indexOf('確認');

  var currentDate = new Date();
  var currentYearMonth = Utilities.formatDate(currentDate, 'Asia/Tokyo', 'yyyy/MM');

  for (var i = 1; i < dataA.length; i++) {
    var idA = dataA[i][idIndexA];
    var dateA = normalizeDate(dataA[i][dateIndexA]);
    var cellA = sheetA.getRange(i + 1, dateIndexA + 1);

    for (var j = 1; j < dataB.length; j++) {
      var idB = dataB[j][idIndexB];
      var dateB = normalizeDate(dataB[j][dateIndexB]);

      if (idA === idB) {
        var noteB = sheetB.getRange(j + 1, dateIndexB + 1).getNote();
        
        if (dateA && dateB && dateA === dateB) {
          // 日付が一致する場合、Bシートのメモをそのままコピー
          cellA.setNote(noteB);
        } else if (dateB) {
          // 日付が異なる場合、新しいエントリーを追加
          var oneMonthAgo = new Date(dateB);
          oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1);
          var oneMonthAgoStr = Utilities.formatDate(oneMonthAgo, 'Asia/Tokyo', 'yyyy/MM/dd');
          var newEntry = `【${currentYearMonth}】 ${dataB[j][dateIndexB]}\n${oneMonthAgoStr} ${dataB[j][dateIndexB]}`;
          
          var currentNoteA = cellA.getNote();
          var updatedNote = currentNoteA ? (newEntry + '\n' + currentNoteA) : newEntry;
          cellA.setNote(updatedNote);
        }
        break;
      }
    }
  }
}

function normalizeDate(dateValue) {
  if (dateValue === undefined || dateValue === null || dateValue === '') return null;

  var dateString = '';
  if (dateValue instanceof Date) {
    dateString = Utilities.formatDate(dateValue, 'Asia/Tokyo', 'yyyy/MM/dd');
  } else if (typeof dateValue === 'string') {
    dateString = dateValue.trim();
  } else {
    return null;
  }

  if (dateString === '') return null;

  var parts = dateString.split('/');
  if (parts.length !== 3) return null;

  if (isNaN(parts[0]) || isNaN(parts[1]) || isNaN(parts[2])) return null;

  return parts[0] + '/' + parts[1].padStart(2, '0') + '/' + parts[2].padStart(2, '0');
}
